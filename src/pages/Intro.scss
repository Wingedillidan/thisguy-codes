@import "../styles/colors";

$GRID_COLOR: $neon-purple;
$GRID_ANGLE_STEP: 7deg;
$GRID_VERTICAL_SPACING: 5rem;
$GRID_HORIZONTAL_SPACING: 0%;
$GRID_HORIZONTAL_ACCELERATION: .4%;
$GRIDLINE_WIDTH: .2em;
$HORIZON_WIDTH: .4em;
$GRIDLINE_VERTICAL_SIDE_COUNT: 12;
$GRIDLINE_HORIZONTAL_COUNT: 25;

$VELOCITY_MULTIPLIER: .75;  // Modifier applied to adjust the speed of the simulated forward movement

$GRID_INIT: 50%;  // Where to start the left side of lines

// GRID INTRO ANIMATIONS

@keyframes anim-horizon {
    0% {
        width: 0;
        opacity: 1;
        background-color: transparent;
    }
    33% {
        width: 100%;
        background-color: transparent;
    }
    100% {
        width: 100%;
        opacity: 1;
        background-color: $purple-darkest;
    }
}

@keyframes anim-center-vertical {
    0% {
        height: 0;
        opacity: 1;
    }
    100% {
        height: 100%;
        opacity: 1;
    }
}

$DELAY: 0s;

.backdrop {
    position: relative;
    width: 100%;
    height: 100vh;
    min-height: 50rem;
    background-color: $purple;
    z-index: -2;
    .horizon {
        position: relative;
        border-top: solid $HORIZON_WIDTH $GRID_COLOR;
        top: 40%;
        height: 60%;
        width: 100%;
        overflow: hidden;
        animation: 3s ease-out 1s anim-horizon forwards;
        opacity: 0;

        $DELAY: $DELAY + 2s;
        
        .verticals-left, .verticals-right, .verticals-center {
            span:not(:last-child) {
                position: absolute;
                top: -1px;
                height: 200%;
                opacity: 0;

                background-color: $GRID_COLOR;

                transform-origin: 100% 0;
                
                border-left: solid calc(#{$GRIDLINE_WIDTH} / 2) $GRID_COLOR;
                border-right: solid calc(#{$GRIDLINE_WIDTH} / 2) $GRID_COLOR;
            }
        }

        .horizontals span {
            position: absolute;
            width: 100%;
            opacity: 0;
            background-color: $GRID_COLOR;
            
            border-top: solid calc(#{$GRIDLINE_WIDTH} / 2) $GRID_COLOR;
            border-bottom: solid calc(#{$GRIDLINE_WIDTH} / 2) $GRID_COLOR;

            &:last-child {
                opacity: 1;
            }
        }

        .verticals-center span {
            left: 50%;
            opacity: 0;
            animation: anim-center-vertical 1s ease-in forwards;
            animation-delay: $DELAY;
        }

        $DELAY: $DELAY + 1s;
        
        .verticals-left {
            @for $n from 1 to $GRIDLINE_VERTICAL_SIDE_COUNT {
                @keyframes anim-left-#{$n} {
                    0% {
                        opacity: 1;
                        right: 50%;
                        transform: rotate(0);
                    }
                    100% {
                        opacity: 1;
                        right: calc(#{$GRID_INIT} + (#{$GRID_VERTICAL_SPACING} * (#{$n})));
                        transform: rotate(calc(#{$GRID_ANGLE_STEP * $n}));

                    }
                }
                span:nth-child(#{$n}) {
                    animation: anim-left-#{$n} 2s forwards;
                    animation-delay: $DELAY;
                }
            }
        }

        .verticals-right {
            @for $n from 1 to $GRIDLINE_VERTICAL_SIDE_COUNT {
                @keyframes anim-right-#{$n} {
                    0% {
                        opacity: 1;
                        left: 50%;
                        transform: rotate(0);
                    }
                    100% {
                        opacity: 1;
                        left: calc(#{$GRID_INIT} + (#{$GRID_VERTICAL_SPACING} * (#{$n})));
                        transform: rotate(calc(-1 * #{$GRID_ANGLE_STEP * $n}));
                    }
                }
                span:nth-child(#{$n}) {
                    animation: anim-right-#{$n} 2s forwards;
                    animation-delay: $DELAY;
                }
            }
        }

        .horizontals {
            @for $n from 0 to $GRIDLINE_HORIZONTAL_COUNT {
                @keyframes anim-#{$n} {
                    0% {
                        top: calc(#{(($n + 1) * $GRID_HORIZONTAL_SPACING) + (($n / 2) * ($n + 1)) * $GRID_HORIZONTAL_ACCELERATION});
                    }
                    100% {
                        top: calc(#{(($n + 2) * $GRID_HORIZONTAL_SPACING) + ((($n + 1) / 2) * ($n + 2)) * $GRID_HORIZONTAL_ACCELERATION});
                    }
                }
                @keyframes anim-center-intro-#{$n} {
                    0% {
                        opacity: 1;
                        border-top: transparent;
                        background-color: transparent;
                        border-bottom: transparent;
                    }
                    30% {
                        border-top: solid calc(#{$GRIDLINE_WIDTH} / 2) rgb(245, 255, 195);
                        background-color: rgb(245, 255, 195);
                        border-bottom: solid calc(#{$GRIDLINE_WIDTH} / 2) rgb(245, 255, 195);
                    }
                    100% {
                        opacity: 1;
                        border-top: solid calc(#{$GRIDLINE_WIDTH} / 2) $GRID_COLOR;
                        background-color: $GRID_COLOR;
                        border-bottom: solid calc(#{$GRIDLINE_WIDTH} / 2) $GRID_COLOR;
                    }
                }
                span:nth-child(#{$n}) {
                    top: calc(#{(($n + 1) * $GRID_HORIZONTAL_SPACING) + (($n / 2) * ($n + 1)) * $GRID_HORIZONTAL_ACCELERATION});
                    animation: 1s anim-center-intro-#{$n} calc(#{$DELAY} + (.1s * #{$n})) forwards,
                        calc(.5s * #{$VELOCITY_MULTIPLIER}) linear calc(#{$DELAY} + (.1s * #{$GRIDLINE_HORIZONTAL_COUNT})) anim-#{$n} 36;
                    // animation-iteration-count: 34;
                    // animation-delay: calc(5s + (.1s * $GRIDLINE_HORIZONTAL_COUNT));
                    // animation-delay: calc(5s + (.1s * #{$n}));
                    // top: calc(-1% + #{(($n - 1) * $GRID_HORIZONTAL_SPACING) + (($n / 2) * $n + 1) * $GRID_HORIZONTAL_ACCELERATION});
                }
            }
        }
    }

    // TITLE INTRO ANIMATIONS

    @keyframes anim-title {
        0% {
            z-index: -1;
            bottom: calc(60% - 1em);
            opacity: 0;
            font-size: 5em;
        }
        49% {
            z-index: -1;
        }
        50% {
            bottom: calc(60% - .2em);
            z-index: 1;
            font-size: 5em;
            opacity: 1;
        }
        100% {
            bottom: calc(25%);
            font-size: 7.6em;
            opacity: 1;
        }
    }

    // 3s groups together a few delay additions that were lost due to context boundries
    $DELAY: calc(#{$DELAY} + (3s) + (.1s * #{$GRIDLINE_HORIZONTAL_COUNT}));

    .title {
        font-size: 5em;
        position: absolute;
        opacity: 0;
        color: white;
        left: 50%;
        transform: translate(-50%);
        white-space: nowrap;
        animation: calc(18s * #{$VELOCITY_MULTIPLIER}) ease-in #{$DELAY} anim-title forwards;
    }

    $DELAY: calc(#{$DELAY} + (5.5s * #{$VELOCITY_MULTIPLIER}));

    @keyframes anim-desc-1-left {
        0% {
            z-index: -1;
            bottom: calc(60% - 1em);
            opacity: 0;
            font-size: 2em;
            left: 12%;
        }
        49% {
            z-index: -1;
        }
        50% {
            bottom: calc(60%);
            left: 12%;

            z-index: 1;
            font-size: 2em;
            opacity: 1;
        }
        100% {
            bottom: calc(40%);
            left: 0;

            font-size: 2.8em;
            opacity: 1;
        }
    }

    @keyframes anim-desc-1-right {
        0% {
            z-index: -1;
            bottom: calc(60% - 1em);
            opacity: 0;
            font-size: 2em;
            right: 12%;
        }
        49% {
            z-index: -1;
        }
        50% {
            bottom: calc(60%);
            right: 12%;

            z-index: 1;
            font-size: 2em;
            opacity: 1;
        }
        100% {
            bottom: calc(40%);
            right: 0;

            font-size: 2.8em;
            opacity: 1;
        }
    }

    .desc-1-left, .desc-1-right, .desc-2 {
        position: absolute;
        opacity: 0;
        color: white;
        white-space: nowrap;
    }
    
    .desc-1-left {
        animation: calc(12.5s * #{$VELOCITY_MULTIPLIER}) ease-in #{$DELAY} anim-desc-1-left forwards;
        transform: translateX(50%);
    }

    .desc-1-right {
        animation: calc(12.5s * #{$VELOCITY_MULTIPLIER}) ease-in #{$DELAY} anim-desc-1-right forwards;
        transform: translateX(-50%);
    }

    $DELAY: calc(#{$DELAY} + (4.5s * #{$VELOCITY_MULTIPLIER}));

    @keyframes anim-desc-2 {
        0% {
            z-index: -1;
            bottom: calc(60% - 1em);
            opacity: 0;
            font-size: 2em;
        }
        49% {
            z-index: -1;
        }
        50% {
            bottom: calc(60%);

            z-index: 1;
            font-size: 2em;
            opacity: 1;
        }
        100% {
            bottom: calc(50%);

            font-size: 2.5em;
            opacity: 1;
        }
    }

    .desc-2 {
        animation: calc(8s * #{$VELOCITY_MULTIPLIER}) ease-in #{$DELAY} anim-desc-2 forwards;
        transform: translateX(-50%);
        left: 50%;
    }

    // TITLE FRAMING

    .text-container {
        width: 100%;
        height: 100%;
        top: 0;
        left: 0;
        position: absolute;

        .text {
            position: relative;
            width: 100%;
            height: 100%;
        }
    }

    @media(max-width: 575px) {
        .text-container {
            padding: 0 0%;
        }
    }

    // Small devices (landscape phones, 576px and up)
    @media (min-width: 576px) and (max-width: 767px) {
        .text-container {
            padding: 0 12%;
        }
    }

    // Medium devices (tablets, 768px and up)
    @media (min-width: 768px) and (max-width: 991px) {
        .text-container {
            padding: 0 5%;
        }
    }

    // Large devices (desktops, 992px and up)
    @media (min-width: 992px) and (max-width: 1199px) {
        .text-container {
            padding: 0 12%;
        }
    }

    // Extra large devices (large desktops, 1200px and up)
    @media (min-width: 1200px) {
        .text-container {
            padding: 0 15%;
        }
    }
}
